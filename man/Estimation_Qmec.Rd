% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Estimation.R
\name{Estimation_Qmec}
\alias{Estimation_Qmec}
\title{Estimation and simulation tidal river}
\usage{
Estimation_Qmec(
  CalibrationData,
  Be_object,
  be_object,
  delta_object,
  ne_object,
  Q0_object,
  dx_object,
  CD1,
  CD2,
  dt_model,
  nCycles = 100,
  burn = 0.5,
  nSlim = max(nCycles/10, 1),
  temp_folder = file.path(tempdir(), "BaM"),
  Nb_column_time_CalData
)
}
\arguments{
\item{CalibrationData}{data frame, calibration data with a minimal information as shown in \code{Saint_Laurent_F2} dataset}

\item{Be_object}{object, real positive value indicating the cross-sectional width at the surface for hypothetical channel}

\item{be_object}{object, real positive value indicating the elevation of the riverbed relative to a reference system (sea mean level)}

\item{delta_object}{object,real value indicating leveling error}

\item{ne_object}{object, real positive value indicating the tunable Manning friction coefficient}

\item{Q0_object}{object, real value indicating initial discharge for calibration}

\item{dx_object}{object, real positive value indicating distance between two gauge stations}

\item{CD1}{real value, chart-datum located upstream}

\item{CD2}{real value, chart-datum located downstream}

\item{dt_model}{integer, positive value indicating time discretization in second of the input data}

\item{nCycles}{integer, number of MCMC adaptation cycles. Total number of simulations equal to 100*nCycles}

\item{burn}{real between 0 (included) and 1 (excluded), MCMC burning factor}

\item{nSlim}{integer, MCMC slim step}

\item{temp_folder}{directory, temporary directory to write computations}

\item{Nb_column_time_CalData}{integer, column number of calibration data corresponding to temporal grid to write in temporal or specified folder}
}
\value{
list with the following components:
\enumerate{
\item MCMC: data frame, MCMC results during calibration process
\item prior_vs_posterior: data frame, summarize the random realization of all parameters
\itemize{
\item value: real value, random value during the random realization of the parameter
\item Distributions: string, either "Prior" or "Posterior" string to indicate the separation of the two groups
\item id: string, parameter's names
}
\item Model_object: object, model object obtained from \code{RBaM} package
}
}
\description{
Parameter estimation for the 1D shallow water equation and simulation of
discharge time series with quantified uncertainties
}
\examples{

priors <- data.frame(
  Be = c(1500, "LogNormal", log(1500), 0.1),
  be = c(-14.6915, "Gaussian", -14.6915, 1),
  delta = c(0, "Gaussian", 0, 0.5),
  ne = c(0.023, "LogNormal", log(0.023), 0.2),
  Q0 = c(12500, "Gaussian", 12500, 10000),
  dx = c(38000, "Gaussian", 38000, 1000)
)

Be <- RBaM::parameter(
  name = "Be",
  init = as.numeric(priors$Be[1]),
  prior.dist = priors$Be[2],
  prior.par = as.numeric(priors$Be[c(3, 4)])
)

be <- RBaM::parameter(
  name = "be",
  init = as.numeric(priors$be[1]),
  prior.dist = priors$be[2],
  prior.par = as.numeric(priors$be[c(3, 4)])
)

delta <- RBaM::parameter(
  name = "delta",
  init = as.numeric(priors$delta[1]),
  prior.dist = priors$delta[2],
  prior.par = as.numeric(priors$delta[c(3, 4)])
)

ne <- RBaM::parameter(
  name = "ne",
  init = as.numeric(priors$ne[1]),
  prior.dist = priors$ne[2],
  prior.par = as.numeric(priors$ne[c(3, 4)])
)

Q0 <- RBaM::parameter(
  name = "Q0",
  init = as.numeric(priors$Q0[1]),
  prior.dist = priors$Q0[2],
  prior.par = as.numeric(priors$Q0[c(3, 4)])
)

dx <- RBaM::parameter(
  name = "dx",
  init = as.numeric(priors$dx[1]),
  prior.dist = priors$dx[2],
  prior.par = as.numeric(priors$dx[c(3, 4)])
)

d1 <- -1.379
d2 <- -1.958
dt_model <- 60

results_calibration <- Estimation_Qmec(
  CalibrationData = Saint_Laurent_F2,
  Be_object = Be,
  be_object = be,
  delta_object = delta,
  ne_object = ne,
  Q0_object = Q0,
  dx_object = dx,
  CD1 = d1,
  CD2 = d2,
  nCycles = 100,
  burn = 0.5,
  dt_model = dt_model,
  Nb_column_time_CalData = 7
)

Plot_prior_posterior(DF_prior_posterior = results_calibration$prior_vs_posterior)

simulation_QMEC <- Prediction_Q_Qmec(
  CalibrationData = Saint_Laurent_F2,
  Model_object = results_calibration$Model_object
)

plot_Q_sim_Qmec(
  Q_observed = simulation_QMEC$Data_obs_plot,
  Q_simulated = simulation_QMEC$Qsim
)

plot_shallow_water(
  pressure_SW = simulation_QMEC$pressure,
  friction_SW = simulation_QMEC$friction,
  advection_SW = simulation_QMEC$advection
)
}
